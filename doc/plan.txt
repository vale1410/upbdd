tody: 
* finish impliedLevel, and makeNewWithBit!
* make a first simple test!

next days: 
[done] : adjustLevel ( in impStore )
[] : impliedLevel
[] : makeNewImpWithBit / in impStore
[] : finish bddAnd, test suite
[] : do the cache!

unordered: 
* split into several files: imp, upbdd, backend, test, inout, 
* read DIMACS files into vector<vector<int>>
* sort vector of ints nicely
* ints to upbdds
* search stage 1: simple left first search, bitset with implications, bitset with decision, simple step, no feedback
* search start 2: with feedback, n steps, rest BDD, as result
* bddAND with rest
* conjunction of initBdds smarter: if variable all the same -> conjunct

done:
[done] plane: impSubtraction. for that you can check if not exists already for bitest
[done] first day: add(Bdd) finished
[done] : test add(Bdd)
[done] : bddAnd ... (simple,with rest)
